//@version=5
//Summary:
//  UTBot generates alerts, then check QEMMT4 condition, if both match then:
//      if confirmation delay is active:
//          at the end of each second/minute (specified in input) of confirmation_delay_timer:
//              check UTBot and QEMMT4 condition which triggered the alert
//              if condition becomes false:
//                  stop check, trigger won't be generated
//              else:
//                  continue checking
//          once confirmation delay period passes and continuous checks all passed, then:
//              trigger actual alert
//      else:
//          trigger actual alert
//Author: SrivR and DauntlessDev39

indicator(title = "QEMMT4+UTBot by SrivR", shorttitle = "QEMMT4+UTBot", overlay = true, timeframe = "5")

// inputs
//  ut bot 
key_value = input.int(title='Key Value. \'This changes the sensitivity\'', defval = 1, group = 'UT Bot')
atr_period = input.int(title='ATR Period', defval=2, group = 'UT Bot')
heikin_ashi_candles = input.bool(title='Signals from Heikin Ashi Candles', defval = false, group = 'UT Bot')
//  QEMMT4
rsi_period = input.int(14, title='RSI Length')
rsi_smoothing = input.int(5, title='RSI Smoothing')
qqe = input.float(4.238, title='Fast QQE Factor')
threshold = input.int(10, title='Thresh-hold')
sQQEx = input.bool(false, title='Show Smooth RSI, QQE Signal crosses')
sQQEz = input.bool(false, title='Show Smooth RSI Zero crosses')
sQQEc = input.bool(false, title='Show Smooth RSI Thresh Hold Channel Exits')

source = input.source(close, title='RSI Source')
//  confirmation delay
apply_confirmation_delay = input.bool(defval = false, title = "Apply Confirmation Delay ?", tooltip = "", group = 'Confirmation Delay')
confirmation_delay_timer = input.int(defval = 4, title = "Confirmation Delay Timer", group =  'Confirmation Delay')

